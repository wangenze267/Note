import{_ as e,c as i,o as t,a}from"./app.ec05212a.js";const V=JSON.parse('{"title":"Vue3 对⽐ Vue2 的变化？","description":"","frontmatter":{},"headers":[{"level":2,"title":"性能优化（更快）：","slug":"性能优化-更快","link":"#性能优化-更快","children":[]},{"level":2,"title":"体积优化（更小）:","slug":"体积优化-更小","link":"#体积优化-更小","children":[]},{"level":2,"title":"支持自定义渲染器：","slug":"支持自定义渲染器","link":"#支持自定义渲染器","children":[]},{"level":2,"title":"TypeScript 支持：","slug":"typescript-支持","link":"#typescript-支持","children":[]},{"level":2,"title":"源码结构变化：","slug":"源码结构变化","link":"#源码结构变化","children":[]}],"relativePath":"basics/Vue核心概念/02.Vue3对比Vue2的变化.md"}'),l={name:"basics/Vue核心概念/02.Vue3对比Vue2的变化.md"},r=a('<h1 id="vue3-对比-vue2-的变化" tabindex="-1">Vue3 对⽐ Vue2 的变化？ <a class="header-anchor" href="#vue3-对比-vue2-的变化" aria-hidden="true">#</a></h1><h2 id="性能优化-更快" tabindex="-1">性能优化（更快）： <a class="header-anchor" href="#性能优化-更快" aria-hidden="true">#</a></h2><ul><li><p>使用了Proxy替代 Object.defineProperty 实现响应式。（为什么？defineProperty 需要对属性进行递归重写添加getter及setter 性能差，同时新增属性和删除属性时无法监控变化，需要$set、$delete 方法。此方法对数组劫持性能差，同时不支持 map 和 set 的数据结构。）</p></li><li><p>模板编译优化。给动态节点增添 PatchFlag 标记；对静态节点进行静态提升；对事件进行缓存处理等。</p></li><li><p>Diff 算法优化，全量 diff 算法中采用最长递增子序列减少节点的移动。在非全量 diff 算法中只比较动态节点，通过PatchFlag 标记更新动态的部分。</p></li></ul><h2 id="体积优化-更小" tabindex="-1">体积优化（更小）: <a class="header-anchor" href="#体积优化-更小" aria-hidden="true">#</a></h2><blockquote><p>Vue3 移除了不常用的 API，实现了按需引入，减少了打包后体积</p></blockquote><ul><li>移除 inline-template (Vue2 中就不推荐使用)</li><li>$on、$off、$once （如果有需要可以采用 mitt 库来实现）</li><li>删除过滤器 （可以通过计算属性或者方法来实现）</li><li>$children移除 （可以通过provide，inject方法构建$children）</li><li>移除.sync .native)修饰符 (.sync通过 v-model:xxx实现，.native为 Vue3 中的默认行为) 以及不在支持 keycode 作为v-on修饰符（@keyup.13 不在支持）</li><li>移除全局 API。Vue.component、Vue.use、Vue.directive (将这些 api 挂载到实例上)</li><li>通过构建工具 Tree-shaking 机制实现按需引入，减少用户打包后体积。</li></ul><h2 id="支持自定义渲染器" tabindex="-1">支持自定义渲染器： <a class="header-anchor" href="#支持自定义渲染器" aria-hidden="true">#</a></h2><p>用户可以自定义渲染 API 达到跨平台的目的。扩展能力更强，无需改造 Vue 源码。</p><h2 id="typescript-支持" tabindex="-1">TypeScript 支持： <a class="header-anchor" href="#typescript-支持" aria-hidden="true">#</a></h2><p>Vue3 源码采用 Typescript 来进行重写 , 对 Ts 的支持更加友好。</p><h2 id="源码结构变化" tabindex="-1">源码结构变化： <a class="header-anchor" href="#源码结构变化" aria-hidden="true">#</a></h2><p>Vue3 源码采用 monorepo 方式进行管理，将模块拆分到 package 目录中，解耦后可单独使用。</p>',12),n=[r];function c(d,s,h,p,u,o){return t(),i("div",null,n)}const f=e(l,[["render",c]]);export{V as __pageData,f as default};
