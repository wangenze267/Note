import{_,c as t,o,b as e,d as s}from"./app.cd3ba8cc.js";const b=JSON.parse('{"title":"既然 Vue 通过数据劫持可以精准探测数据变化，为什么还需要虚拟 DOM 进行 diff 检测差异？","description":"","frontmatter":{},"headers":[],"relativePath":"basics/Vue核心概念/03.Vue通过数据劫持可以精准探测数据变化，为什么还需要虚拟Dom进行Diff检测差异.md"}'),a={name:"basics/Vue核心概念/03.Vue通过数据劫持可以精准探测数据变化，为什么还需要虚拟Dom进行Diff检测差异.md"},c=e("h1",{id:"既然-vue-通过数据劫持可以精准探测数据变化-为什么还需要虚拟-dom-进行-diff-检测差异",tabindex:"-1"},[s("既然 Vue 通过数据劫持可以精准探测数据变化，为什么还需要虚拟 DOM 进行 diff 检测差异？ "),e("a",{class:"header-anchor",href:"#既然-vue-通过数据劫持可以精准探测数据变化-为什么还需要虚拟-dom-进行-diff-检测差异","aria-hidden":"true"},"#")],-1),r=e("p",null,"Vue 的数据劫持是通过 Object.defineProperty 或 Proxy 来实现的。",-1),d=e("p",null,"虚拟 DOM 是用于比较两次渲染之间的虚拟树，找出差异并仅更新必要的部分。从而提高性能，减少直接操作实际 DOM 的次数。（直接操作真实 DOM 是代价是非常昂贵的）",-1),n=e("p",null,"Vue 内部设计原因导致，vue 设计的是每个组件一个 watcher（渲染 watcher），没有采用一个属性对应一个 watcher。",-1),i=e("p",null,"这样会导致大量 watcher 的产生而且浪费内存，如果粒度过低也无法精准检测变化。",-1),f=e("p",null,"所以采用 diff 算法 + 组件级 watcher。",-1),u=[c,r,d,n,i,f];function h(l,p,m,D,V,O){return o(),t("div",null,u)}const v=_(a,[["render",h]]);export{b as __pageData,v as default};
