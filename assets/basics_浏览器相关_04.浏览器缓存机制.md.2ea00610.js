import{_ as e,c as t,o as i,a as l}from"./app.f1bf49fb.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"1、浏览器缓存机制","slug":"_1、浏览器缓存机制","link":"#_1、浏览器缓存机制","children":[]},{"level":3,"title":"2、强制缓存","slug":"_2、强制缓存","link":"#_2、强制缓存","children":[]},{"level":3,"title":"3、协商缓存","slug":"_3、协商缓存","link":"#_3、协商缓存","children":[]}],"relativePath":"basics/浏览器相关/04.浏览器缓存机制.md"}'),a={name:"basics/浏览器相关/04.浏览器缓存机制.md"},p=l('<h3 id="_1、浏览器缓存机制" tabindex="-1">1、浏览器缓存机制 <a class="header-anchor" href="#_1、浏览器缓存机制" aria-hidden="true">#</a></h3><p>浏览器发起 HTTP 请求 – 服务器响应该请求。那么浏览器第一次向服务器发起该请求后拿到请求结果，会根据响应报文中 HTTP 头的缓存标识，决定是否缓存结果，是则将请求结果和缓存标识存入浏览器缓存中，简单的过程如下图：</p><p><img src="https://pic.leetcode.cn/1668417873-HQSOzQ-image-20221107214735475.png" alt="image-20221107214735475.png"></p><p>由上图我们可以知道：</p><ol><li><p>浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识</p></li><li><p>浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中</p></li><li><p>根据是否需要向服务器重新发起 HTTP 请求将缓存过程分为两个部分，分别是强制缓存和协商缓存。</p></li></ol><h3 id="_2、强制缓存" tabindex="-1">2、强制缓存 <a class="header-anchor" href="#_2、强制缓存" aria-hidden="true">#</a></h3><p>强制缓存就是向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程。</p><p><img src="https://pic.leetcode.cn/1668417882-iNaxVq-image-20221107214742279.png" alt="image-20221107214742279.png"></p><ol><li><p>不存在该缓存结果和缓存标识，强制缓存失效，则直接向服务器发起请求（跟第一次发起请求一致）。</p></li><li><p>存在该缓存结果和缓存标识，但该结果已失效，强制缓存失效，则使用协商缓存。</p></li><li><p>存在该缓存结果和缓存标识，且该结果尚未失效，强制缓存生效，直接返回该结果</p></li></ol><h3 id="_3、协商缓存" tabindex="-1">3、协商缓存 <a class="header-anchor" href="#_3、协商缓存" aria-hidden="true">#</a></h3><p>协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程</p><p><img src="https://pic.leetcode.cn/1668417888-lpDfFs-image-20221107214748208.png" alt="image-20221107214748208.png"></p><ol><li><p>协商缓存生效，返回 304</p></li><li><p>协商缓存失效，返回 200 和请求结果结果</p></li></ol><blockquote><p>本章节来自 <a href="https://leetcode.cn/leetbook" target="_blank" rel="noreferrer">LeetBook - 力扣（LeetCode）</a></p></blockquote>',14),_=[p];function r(c,n,o,s,d,h){return i(),t("div",null,_)}const f=e(a,[["render",r]]);export{m as __pageData,f as default};
