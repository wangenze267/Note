import{_ as s,c as n,o as a,a as l}from"./app.9ba91beb.js";const A=JSON.parse('{"title":"万物皆可懒加载","description":"","frontmatter":{},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"三类资源懒加载实现方案","slug":"三类资源懒加载实现方案","link":"#三类资源懒加载实现方案","children":[{"level":3,"title":"1、监听滚动事件方案","slug":"_1、监听滚动事件方案","link":"#_1、监听滚动事件方案","children":[]}]}],"relativePath":"code_life/知识分享/04.万物皆可懒加载.md"}'),p={name:"code_life/知识分享/04.万物皆可懒加载.md"},e=l(`<h1 id="万物皆可懒加载" tabindex="-1">万物皆可懒加载 <a class="header-anchor" href="#万物皆可懒加载" aria-hidden="true">#</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p>最好的代码，就是没有代码。</p><p>同样的，体验最好的网页，就是没有内容的网页。</p><p>这段话乍一听似乎脱离实际，没有内容的网页根本没有加载的必要。</p><p>但静下来分析，却道出了前端体验优化的核心：<strong>精简页面内容</strong>。</p><p>再多优化，都比不上从根源上精简页面的内容，减少加载的资源。</p><p>所以，此节内容为大家讲述：</p><p>前端工程精简加载资源体积和资源数量的解决方案：<strong>懒加载各类资源</strong>。</p><p>资源懒加载一般应用于需要加载外部资源的元素，例如 <code>&lt;img&gt;</code>, <code>&lt;video&gt;</code>, <code>&lt;iframe&gt;</code>, <code>&lt;picture&gt;</code> 等。</p><p>当懒加载目标元素在视口（ViewPort）外时，不加载对应资源。目标元素接近或进入视口时，才触发加载资源。</p><p>从而减少页面加载资源的数量，精简加载资源体积，优化用户体验。</p><hr><p>作者个人简介：<a href="https://note.wangez.site/business_innovation/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D.html" target="_blank" rel="noreferrer">Ned同学的个人说明书</a></p><p>大纲（学完则删）：</p><img src="https://img.wangez.site/img/%E4%B8%87%E7%89%A9%E7%9A%86%E5%8F%AF%E6%87%92%E5%8A%A0%E8%BD%BD%E8%84%91%E5%9B%BE.png" width="800"><h2 id="三类资源懒加载实现方案" tabindex="-1">三类资源懒加载实现方案 <a class="header-anchor" href="#三类资源懒加载实现方案" aria-hidden="true">#</a></h2><h3 id="_1、监听滚动事件方案" tabindex="-1">1、监听滚动事件方案 <a class="header-anchor" href="#_1、监听滚动事件方案" aria-hidden="true">#</a></h3><p>第一种实现方案是通过监听浏览器页面滚动事件（scroll），动态计算视口内元素位置，从而判断懒加载目标元素，触发资源加载。</p><p>以图片元素懒加载为例，我们需要监听页面滚动事件，并计算出每张图片与视口顶部的相对距离。</p><p>如果图片在视口内，就加载该图片，否则就不加载。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-lazyload</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/isNed.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. 获取所有需要懒加载的图片元素</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> lazyloadImages </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[data-lazyload]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. 监听页面滚动事件</span></span>
<span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scroll</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">lazyloadImages</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">img</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-loaded</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 3.  获取图片与视口顶部的相对距离</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">topPos</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBoundingClientRect</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 4. 与 视口高度（window.innerHeight）对比，判断是否在视口内</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">topPos</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHeight</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 5. 如果图片在当前视口内，就加载该图片</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-src</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-loaded</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,23),o=[e];function t(r,c,i,F,y,D){return a(),n("div",null,o)}const C=s(p,[["render",t]]);export{A as __pageData,C as default};
