import{_ as e,c as t,o as l,a as r}from"./app.ba94a6f0.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":".vue中的html是真实的html吗？","slug":"vue中的html是真实的html吗","link":"#vue中的html是真实的html吗","children":[]}],"relativePath":"fe_advance/Vue源码解析/Vue3源码解析/01.基本概念/06..vue中的html是真实的html吗？.md"}'),n={name:"fe_advance/Vue源码解析/Vue3源码解析/01.基本概念/06..vue中的html是真实的html吗？.md"},o=r('<h2 id="vue中的html是真实的html吗" tabindex="-1">.vue中的html是真实的html吗？ <a class="header-anchor" href="#vue中的html是真实的html吗" aria-hidden="true">#</a></h2><p>这一小节，我们首先需要思考一个问题： <strong>在.vue文件中的 template 写入的 html 是真实的 html 标签节点吗？</strong></p><p>答案是：不是的！</p><p>原因非常简单，如果我们写入的是真实 html 节点，对于 v-if、v-bind、keep-alive 这些东西，浏览器明显是 <strong>不认识</strong> 的，所以这些东西应该无法解析。</p><p>但是现实是这些指令或组件被正确解析了，所以 <strong>vue一定在中间做了什么</strong>，让 <strong>假的html标签节点</strong> 被渲染成了 <strong>真实的html标签节点</strong>。</p><p>那么 Vue 在中间做了什么事情呢？</p><p>简单来说可以分成两件事（排序按执行顺序）：</p><ol><li>编译时：complier</li><li>运行时：runtime</li></ol><p>这两个东西对于大家而言，可能比较陌生，但是在 <a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue官网</a> 中早就提到了这几个概念。</p><p>这些概念一共有三个，如果我们要学习Vue的框架设计，那么就必须要了解它们，它们分别是：</p><ol><li>运行时：runtime</li><li>编译时：complier</li><li>运行时 + 编译时：runtime + complier</li></ol>',11),a=[o];function _(i,m,h,s,p,u){return l(),t("div",null,a)}const v=e(n,[["render",_]]);export{d as __pageData,v as default};
